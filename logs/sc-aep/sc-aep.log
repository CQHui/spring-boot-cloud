sc-aep : [2018-07-03 10:39:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ae76500: startup date [Tue Jul 03 10:39:32 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:39:33] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 10:39:33] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 10:39:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$8982a465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:39:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$afd90f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 10:39:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 10:39:35] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:127]-- Request execution failure with status code 401; retrying on another server if available
sc-aep : [2018-07-03 10:39:35] [ERROR]
				[com.netflix.discovery.DiscoveryClient:943]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:234)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$137f5e3d.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$137f5e3d$$FastClassBySpringCGLIB$$18754133.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$137f5e3d.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:39:35] [WARN ]
				[com.netflix.discovery.DiscoveryClient:288]-- Using default backup registry implementation which does not do anything.
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1300]-- Not registering with Eureka server per configuration
sc-aep : [2018-07-03 10:39:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530585575405 with initial instances count: 0
sc-aep : [2018-07-03 10:39:45] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 10:39:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$18e74ea.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:39:45] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:984]-- Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ae76500: startup date [Tue Jul 03 10:39:32 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:39:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 10:39:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 10:39:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$18e74ea.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:42:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fd1731c: startup date [Tue Jul 03 10:42:32 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:42:33] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 10:42:33] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 10:42:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$cb595e57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:42:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1afc92f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 10:42:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 10:42:35] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:127]-- Request execution failure with status code 401; retrying on another server if available
sc-aep : [2018-07-03 10:42:35] [ERROR]
				[com.netflix.discovery.DiscoveryClient:943]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:234)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$5556182f.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$5556182f$$FastClassBySpringCGLIB$$1bb5d73d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$5556182f.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:42:35] [WARN ]
				[com.netflix.discovery.DiscoveryClient:288]-- Using default backup registry implementation which does not do anything.
sc-aep : [2018-07-03 10:42:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1300]-- Not registering with Eureka server per configuration
sc-aep : [2018-07-03 10:42:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530585755143 with initial instances count: 0
sc-aep : [2018-07-03 10:42:45] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 10:42:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$9f8a0b75.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:42:45] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:984]-- Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fd1731c: startup date [Tue Jul 03 10:42:32 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:42:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 10:42:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 10:42:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$9f8a0b75.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:55:59] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ae81e1: startup date [Tue Jul 03 10:55:59 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:55:59] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 10:56:00] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 10:56:00] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$74df126c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:56:00] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9b357d44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 10:56:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 10:56:02] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:127]-- Request execution failure with status code 401; retrying on another server if available
sc-aep : [2018-07-03 10:56:02] [ERROR]
				[com.netflix.discovery.DiscoveryClient:943]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:234)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$fedbcc44.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$fedbcc44$$FastClassBySpringCGLIB$$3bb1b57e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$fedbcc44.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:56:02] [WARN ]
				[com.netflix.discovery.DiscoveryClient:288]-- Using default backup registry implementation which does not do anything.
sc-aep : [2018-07-03 10:56:02] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1300]-- Not registering with Eureka server per configuration
sc-aep : [2018-07-03 10:56:02] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530586562142 with initial instances count: 0
sc-aep : [2018-07-03 10:56:12] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 10:56:12] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$eaf8a8f6.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:56:12] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:984]-- Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ae81e1: startup date [Tue Jul 03 10:55:59 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:56:12] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 10:56:12] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 10:56:12] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$eaf8a8f6.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:58:16] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@44a2b17b: startup date [Tue Jul 03 10:58:16 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:58:16] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 10:58:17] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 10:58:17] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$61cf8aad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:58:17] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8825f585] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 10:58:18] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 10:58:19] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:127]-- Request execution failure with status code 401; retrying on another server if available
sc-aep : [2018-07-03 10:58:19] [ERROR]
				[com.netflix.discovery.DiscoveryClient:943]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:234)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$ebcc4485.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$ebcc4485$$FastClassBySpringCGLIB$$3361085b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$ebcc4485.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:58:19] [WARN ]
				[com.netflix.discovery.DiscoveryClient:288]-- Using default backup registry implementation which does not do anything.
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1300]-- Not registering with Eureka server per configuration
sc-aep : [2018-07-03 10:58:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530586699186 with initial instances count: 0
sc-aep : [2018-07-03 10:58:29] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 10:58:29] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$7bc4803b.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 10:58:29] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:984]-- Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@44a2b17b: startup date [Tue Jul 03 10:58:16 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 10:58:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 10:58:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 10:58:29] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$7bc4803b.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 11:03:33] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6fefce9e: startup date [Tue Jul 03 11:03:33 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 11:03:33] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 11:03:33] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 11:03:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$8c31bab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:03:33] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f198683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:03:34] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 11:03:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 11:03:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 11:03:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 11:03:35] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:127]-- Request execution failure with status code 401; retrying on another server if available
sc-aep : [2018-07-03 11:03:35] [ERROR]
				[com.netflix.discovery.DiscoveryClient:943]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:234)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bfd583.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bfd583$$FastClassBySpringCGLIB$$6c0d794a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bfd583.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 11:03:35] [WARN ]
				[com.netflix.discovery.DiscoveryClient:288]-- Using default backup registry implementation which does not do anything.
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1300]-- Not registering with Eureka server per configuration
sc-aep : [2018-07-03 11:03:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530587015583 with initial instances count: 0
sc-aep : [2018-07-03 11:03:45] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 11:03:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$21e476ac.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 11:03:45] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:984]-- Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6fefce9e: startup date [Tue Jul 03 11:03:33 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 11:03:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 11:03:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 11:03:45] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
java.lang.IllegalStateException: No instances found of configserver (GREENTOWN-SERVER-CONFIG)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$FastClassBySpringCGLIB$$facbf882.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:118)
	at org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider$$EnhancerBySpringCGLIB$$21e476ac.getConfigServerInstance(<generated>)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:177)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
sc-aep : [2018-07-03 11:09:19] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc: startup date [Tue Jul 03 11:09:19 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 11:09:19] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 11:09:20] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 11:09:20] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$49daae5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:20] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$70311934] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:21] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:82]-- Fetching config from server at: http://localhost:8888
sc-aep : [2018-07-03 11:09:25] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:96]-- Located environment: name=sc-aep, profiles=[dev], label=null, version=43307cfa2d74ba4e9886f89b850ea4c72acfbfb1, state=null
sc-aep : [2018-07-03 11:09:25] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/sc-aep-dev.properties'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/application.yml'}]]
sc-aep : [2018-07-03 11:09:25] [INFO ]
				[com.greentown.aep.AepApplication:597]-- The following profiles are active: dev
sc-aep : [2018-07-03 11:09:25] [INFO ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:583]-- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43e1692f: startup date [Tue Jul 03 11:09:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc
sc-aep : [2018-07-03 11:09:26] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/applicationContext.xml]
sc-aep : [2018-07-03 11:09:26] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-data-redis.xml]
sc-aep : [2018-07-03 11:09:26] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-database.xml]
sc-aep : [2018-07-03 11:09:26] [WARN ]
				[org.mybatis.spring.mapper.ClassPathMapperScanner:166]-- No MyBatis mapper was found in '[com.greentown.aep]' package. Please check your configuration.
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:165]-- Multiple Spring Data modules found, entering strict repository configuration mode!
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader:305]-- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'characterEncodingFilter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [zipkin/autoconfigure/ui/ZipkinUiAutoConfiguration.class]]
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:288]-- BeanFactory id=acef4859-2d8b-3b8f-b62c-d83e1c83a65b
sc-aep : [2018-07-03 11:09:27] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$1a82d465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$567c5c69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54171637] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8643bc78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$70311934] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$3bfac256] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.xnio:104]-- XNIO version 3.3.8.Final
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.xnio.nio:55]-- XNIO NIO Implementation Version 3.3.8.Final
sc-aep : [2018-07-03 11:09:29] [WARN ]
				[io.undertow.websockets.jsr:67]-- UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
sc-aep : [2018-07-03 11:09:29] [WARN ]
				[io.undertow.websockets.jsr:76]-- UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[io.undertow.servlet:360]-- Initializing Spring embedded WebApplicationContext
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.web.context.ContextLoader:276]-- Root WebApplicationContext: initialization completed in 3624 ms
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'metricsFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'traceFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'requestContextFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'webRequestLoggingFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:271]-- Mapping filter: 'webStatFilter' to urls: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'applicationContextIdFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'characterEncodingFilter' to: [/*]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'dispatcherServlet' to [/]
sc-aep : [2018-07-03 11:09:29] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'statViewServlet' to [/druid/*]
sc-aep : [2018-07-03 11:09:30] [WARN ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:551]-- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rabbitMQConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'greentown.rabbitmq.exchange' in value "${greentown.rabbitmq.exchange}"
sc-aep : [2018-07-03 11:09:30] [INFO ]
				[org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:101]-- 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
sc-aep : [2018-07-03 11:09:30] [ERROR]
				[org.springframework.boot.SpringApplication:771]-- Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rabbitMQConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'greentown.rabbitmq.exchange' in value "${greentown.rabbitmq.exchange}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.greentown.aep.AepApplication.main(AepApplication.java:21)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'greentown.rabbitmq.exchange' in value "${greentown.rabbitmq.exchange}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:831)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	... 17 common frames omitted
sc-aep : [2018-07-03 11:19:29] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc: startup date [Tue Jul 03 11:19:29 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 11:19:29] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 11:19:29] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 11:19:29] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$7dbd4a6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:29] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a413b546] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:30] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:82]-- Fetching config from server at: http://localhost:8888
sc-aep : [2018-07-03 11:19:38] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:96]-- Located environment: name=sc-aep, profiles=[dev], label=null, version=46592a17a1d5098585127fe23cc2ef53c285305a, state=null
sc-aep : [2018-07-03 11:19:38] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/sc-aep-dev.properties'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/application.yml'}]]
sc-aep : [2018-07-03 11:19:38] [INFO ]
				[com.greentown.aep.AepApplication:597]-- The following profiles are active: dev
sc-aep : [2018-07-03 11:19:38] [INFO ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:583]-- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe7f967: startup date [Tue Jul 03 11:19:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/applicationContext.xml]
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-data-redis.xml]
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-database.xml]
sc-aep : [2018-07-03 11:19:39] [WARN ]
				[org.mybatis.spring.mapper.ClassPathMapperScanner:166]-- No MyBatis mapper was found in '[com.greentown.aep]' package. Please check your configuration.
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:165]-- Multiple Spring Data modules found, entering strict repository configuration mode!
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader:305]-- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
sc-aep : [2018-07-03 11:19:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'characterEncodingFilter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [zipkin/autoconfigure/ui/ZipkinUiAutoConfiguration.class]]
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:288]-- BeanFactory id=acef4859-2d8b-3b8f-b62c-d83e1c83a65b
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4e657077] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$8a5ef87b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87f9b249] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ba26588a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a413b546] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$6fdd5e68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.xnio:104]-- XNIO version 3.3.8.Final
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.xnio.nio:55]-- XNIO NIO Implementation Version 3.3.8.Final
sc-aep : [2018-07-03 11:19:41] [WARN ]
				[io.undertow.websockets.jsr:67]-- UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
sc-aep : [2018-07-03 11:19:41] [WARN ]
				[io.undertow.websockets.jsr:76]-- UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[io.undertow.servlet:360]-- Initializing Spring embedded WebApplicationContext
sc-aep : [2018-07-03 11:19:41] [INFO ]
				[org.springframework.web.context.ContextLoader:276]-- Root WebApplicationContext: initialization completed in 3432 ms
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'metricsFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'traceFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'requestContextFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'webRequestLoggingFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:271]-- Mapping filter: 'webStatFilter' to urls: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'applicationContextIdFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'characterEncodingFilter' to: [/*]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'dispatcherServlet' to [/]
sc-aep : [2018-07-03 11:19:42] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'statViewServlet' to [/druid/*]
sc-aep : [2018-07-03 11:19:43] [INFO ]
				[com.alibaba.druid.pool.DruidDataSource:932]-- {dataSource-1} inited
sc-aep : [2018-07-03 11:19:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
sc-aep : [2018-07-03 11:19:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534]-- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe7f967: startup date [Tue Jul 03 11:19:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfo],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfo(java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoObject],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.telecomdevice.DeviceRO> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoObject(java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoList],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoList(com.greentown.aep.ro.telecomdevice.DeviceSearchRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoListObject],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.telecomdevice.DevicesPageRO> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoListObject(com.greentown.aep.ro.telecomdevice.DeviceSearchRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/subscribe],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.Boolean> com.greentown.aep.controller.ChinatelecomResource.subscribe(com.greentown.aep.ro.telecomdevice.SubscribeRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/types],methods=[GET]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.List<java.lang.String>> com.greentown.aep.controller.DeviceResource.getTypes()
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/list],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.common.page.PageBean> com.greentown.aep.controller.DeviceResource.getDeiceList(com.greentown.aep.ro.device.DeviceParamRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/update],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.Map<java.lang.String, java.lang.Object>> com.greentown.aep.controller.DeviceResource.updateDevice(com.greentown.aep.ro.device.DeviceInfoRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/getUserType],methods=[GET]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.DeviceResource.getUserType(java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByUniqueId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.DeviceResource.selectByUniqueId(java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByProjectId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.List<com.greentown.aep.ro.device.DeviceInfoRO>> com.greentown.aep.controller.DeviceResource.selectByProjectId(java.lang.Long)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByDeviceId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.device.DeviceInfoRO> com.greentown.aep.controller.DeviceResource.selectByDeviceId(java.lang.Long)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/openapi/getOne],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.device.OpenApiSecretRO> com.greentown.aep.controller.OpenApiSecretResource.getOne(java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/parkingTraffic/processing],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.Boolean> com.greentown.aep.controller.ParkingTrafficResource.parkingDataProcessing(java.lang.String,java.lang.String,java.lang.String)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/test/subscribeNotify]}" onto public java.lang.String com.greentown.aep.controller.TestResource.subscribeNotify()
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/switch/turnOn],methods=[POST]}" onto public void com.greentown.aep.controller.device.SwitchResource.turnOnLight() throws java.lang.Exception
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/switch/turnOff],methods=[POST]}" onto public void com.greentown.aep.controller.device.SwitchResource.turnOffLight() throws java.lang.Exception
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/house/luminance/getLuminance],methods=[POST]}" onto public com.greentown.common.page.PageBean<com.greentown.aep.model.dto.DeviceInfoDO> com.greentown.aep.controller.house.LuminanceResource.getDeiceList(com.greentown.aep.ro.device.DeviceParamRO)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/api/**],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.forwardApi(javax.servlet.http.HttpServletRequest)
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/ || /zipkin/traces/{id} || /zipkin/dependency],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.forwardUiEndpoints()
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/favicon.ico],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.favicon()
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/],methods=[GET]}" onto public void zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.redirectRoot(javax.servlet.http.HttpServletResponse) throws java.io.IOException
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/config.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<zipkin.autoconfigure.ui.ZipkinUiProperties> zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.serveUiConfig()
sc-aep : [2018-07-03 11:19:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/index.html],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.Resource> zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.serveIndex()
sc-aep : [2018-07-03 11:19:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 11:19:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 11:19:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/zipkin/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 11:19:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
sc-aep : [2018-07-03 11:19:48] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 11:19:49] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:165]-- Initializing ExecutorService 
sc-aep : [2018-07-03 11:19:50] [WARN ]
				[org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:19]-- spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:431]-- Registering beans for JMX exposure on startup
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'dataSource' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'statFilter' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5fe7f967,type=ConfigurationPropertiesRebinder]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:671]-- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:671]-- Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:431]-- Registering beans for JMX exposure on startup
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:343]-- Starting beans in phase 0
sc-aep : [2018-07-03 11:19:50] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 11:19:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 11:19:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 11:19:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 11:19:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 11:19:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1027]-- The response status is 200
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1253]-- Starting heartbeat executor: renew interval is: 30
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:59]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530587992533 with initial instances count: 4
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40]-- Registering application sc-aep with eureka with status UP
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1288]-- Saw local status change event StatusChangeEvent [timestamp=1530587992571, current=UP, previous=STARTING]
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:804]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416: registering service...
sc-aep : [2018-07-03 11:19:52] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:813]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - registration status: 204
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:343]-- Starting beans in phase 2147483647
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor:268]-- No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer:160]-- Undertow started on port(s) 9416 (http)
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 9416
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[com.greentown.aep.AepApplication:57]-- Started AepApplication in 24.949 seconds (JVM running for 26.914)
sc-aep : [2018-07-03 11:19:53] [INFO ]
				[org.springframework.amqp.rabbit.connection.CachingConnectionFactory:354]-- Attempting to connect to: [192.168.9.51:5672]
sc-aep : [2018-07-03 11:19:54] [INFO ]
				[org.springframework.amqp.rabbit.connection.CachingConnectionFactory:368]-- Created new connection: rabbitConnectionFactory#3e03dcb6:0/SimpleConnection@502adeb3 [delegate=amqp://guest@192.168.9.51:5672/, localPort= 52364]
sc-aep : [2018-07-03 11:19:54] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:82]-- Fetching config from server at: http://localhost:8888
sc-aep : [2018-07-03 11:19:56] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:96]-- Located environment: name=sc-aep, profiles=[dev], label=null, version=46592a17a1d5098585127fe23cc2ef53c285305a, state=null
sc-aep : [2018-07-03 11:24:52] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:29:52] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:34:52] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:39:52] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:55:25] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 11:55:51] [ERROR]
				[com.rabbitmq.client.impl.ForgivingExceptionHandler:124]-- An unexpected connection driver error occured
java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:288)
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:164)
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:571)
	at java.lang.Thread.run(Thread.java:748)
sc-aep : [2018-07-03 11:56:06] [ERROR]
				[com.rabbitmq.client.impl.ForgivingExceptionHandler:124]-- An unexpected connection driver error occured
java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:288)
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:164)
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:571)
	at java.lang.Thread.run(Thread.java:748)
sc-aep : [2018-07-03 11:56:06] [ERROR]
				[org.springframework.amqp.rabbit.connection.CachingConnectionFactory:1278]-- Channel shutdown: connection error
sc-aep : [2018-07-03 12:00:26] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 12:05:26] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 12:56:04] [INFO ]
				[io.undertow.servlet:360]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
sc-aep : [2018-07-03 12:56:04] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:489]-- FrameworkServlet 'dispatcherServlet': initialization started
sc-aep : [2018-07-03 12:56:04] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:508]-- FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
sc-aep : [2018-07-03 12:57:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:984]-- Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe7f967: startup date [Tue Jul 03 11:19:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@372ea2bc
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:64]-- Unregistering application sc-aep with eureka with status DOWN
sc-aep : [2018-07-03 12:59:22] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1286]-- Saw local status change event StatusChangeEvent [timestamp=1530593962457, current=DOWN, previous=UP]
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[com.netflix.discovery.DiscoveryClient:804]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416: registering service...
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[com.netflix.discovery.DiscoveryClient:813]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - registration status: 204
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:358]-- Stopping beans in phase 2147483647
sc-aep : [2018-07-03 12:59:22] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:358]-- Stopping beans in phase 0
sc-aep : [2018-07-03 12:59:37] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:583]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@70dd7e15: startup date [Tue Jul 03 12:59:37 CST 2018]; root of context hierarchy
sc-aep : [2018-07-03 12:59:37] [INFO ]
				[org.hibernate.validator.internal.util.Version:30]-- HV000001: Hibernate Validator 5.3.6.Final
sc-aep : [2018-07-03 12:59:37] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 12:59:37] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$f9f2605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:37] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$35f590dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:38] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:82]-- Fetching config from server at: http://localhost:8888
sc-aep : [2018-07-03 12:59:41] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:96]-- Located environment: name=sc-aep, profiles=[dev], label=null, version=46592a17a1d5098585127fe23cc2ef53c285305a, state=null
sc-aep : [2018-07-03 12:59:41] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/sc-aep-dev.properties'}, MapPropertySource {name='https://github.com/CQHui/spring-boot-cloud/config-repo/application.yml'}]]
sc-aep : [2018-07-03 12:59:41] [INFO ]
				[com.greentown.aep.AepApplication:597]-- The following profiles are active: dev
sc-aep : [2018-07-03 12:59:41] [INFO ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:583]-- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eabe84a: startup date [Tue Jul 03 12:59:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@70dd7e15
sc-aep : [2018-07-03 12:59:42] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/applicationContext.xml]
sc-aep : [2018-07-03 12:59:42] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-data-redis.xml]
sc-aep : [2018-07-03 12:59:42] [INFO ]
				[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317]-- Loading XML bean definitions from URL [file:/Users/chenqihui/Documents/study/spring-boot-cloud/sc-aep/aep-deploy/target/classes/spring/spring-database.xml]
sc-aep : [2018-07-03 12:59:43] [WARN ]
				[org.mybatis.spring.mapper.ClassPathMapperScanner:166]-- No MyBatis mapper was found in '[com.greentown.aep]' package. Please check your configuration.
sc-aep : [2018-07-03 12:59:43] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:165]-- Multiple Spring Data modules found, entering strict repository configuration mode!
sc-aep : [2018-07-03 12:59:43] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
sc-aep : [2018-07-03 12:59:43] [INFO ]
				[org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader:305]-- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
sc-aep : [2018-07-03 12:59:44] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:828]-- Overriding bean definition for bean 'characterEncodingFilter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration; factoryMethodName=characterEncodingFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [zipkin/autoconfigure/ui/ZipkinUiAutoConfiguration.class]]
sc-aep : [2018-07-03 12:59:45] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:288]-- BeanFactory id=e7d66379-51b6-35bf-bb28-2bfca6942891
sc-aep : [2018-07-03 12:59:45] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
sc-aep : [2018-07-03 12:59:45] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$e0474c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:45] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$1c40d412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$19db8de0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b289561a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1d806de6' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$fcb310e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d75df8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties' of type [org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration' of type [org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration$$EnhancerBySpringCGLIB$$d12549e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'resourceServerProperties' of type [org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4c083421] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$35f590dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1bf39ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:327]-- Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration$$EnhancerBySpringCGLIB$$5ed8203f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.xnio:104]-- XNIO version 3.3.8.Final
sc-aep : [2018-07-03 12:59:46] [INFO ]
				[org.xnio.nio:55]-- XNIO NIO Implementation Version 3.3.8.Final
sc-aep : [2018-07-03 12:59:47] [WARN ]
				[io.undertow.websockets.jsr:67]-- UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
sc-aep : [2018-07-03 12:59:47] [WARN ]
				[io.undertow.websockets.jsr:76]-- UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
sc-aep : [2018-07-03 12:59:47] [INFO ]
				[io.undertow.servlet:360]-- Initializing Spring embedded WebApplicationContext
sc-aep : [2018-07-03 12:59:47] [INFO ]
				[org.springframework.web.context.ContextLoader:276]-- Root WebApplicationContext: initialization completed in 5720 ms
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'metricsFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'traceFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'requestContextFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean:258]-- Mapping filter: 'springSecurityFilterChain' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'webRequestLoggingFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:271]-- Mapping filter: 'webStatFilter' to urls: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'applicationContextIdFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:258]-- Mapping filter: 'characterEncodingFilter' to: [/*]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'dispatcherServlet' to [/]
sc-aep : [2018-07-03 12:59:48] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:190]-- Mapping servlet: 'statViewServlet' to [/druid/*]
sc-aep : [2018-07-03 12:59:49] [INFO ]
				[com.alibaba.druid.pool.DruidDataSource:932]-- {dataSource-1} inited
sc-aep : [2018-07-03 12:59:53] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
sc-aep : [2018-07-03 12:59:53] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534]-- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eabe84a: startup date [Tue Jul 03 12:59:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@70dd7e15
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfo],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfo(java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoObject],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.telecomdevice.DeviceRO> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoObject(java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoList],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoList(com.greentown.aep.ro.telecomdevice.DeviceSearchRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/getDeviceInfoListObject],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.telecomdevice.DevicesPageRO> com.greentown.aep.controller.ChinatelecomResource.getDeviceInfoListObject(com.greentown.aep.ro.telecomdevice.DeviceSearchRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/chinatelecomSDK/subscribe],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.Boolean> com.greentown.aep.controller.ChinatelecomResource.subscribe(com.greentown.aep.ro.telecomdevice.SubscribeRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/types],methods=[GET]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.List<java.lang.String>> com.greentown.aep.controller.DeviceResource.getTypes()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/list],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.common.page.PageBean> com.greentown.aep.controller.DeviceResource.getDeiceList(com.greentown.aep.ro.device.DeviceParamRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/update],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.Map<java.lang.String, java.lang.Object>> com.greentown.aep.controller.DeviceResource.updateDevice(com.greentown.aep.ro.device.DeviceInfoRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/getUserType],methods=[GET]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.DeviceResource.getUserType(java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByUniqueId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.String> com.greentown.aep.controller.DeviceResource.selectByUniqueId(java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByProjectId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.util.List<com.greentown.aep.ro.device.DeviceInfoRO>> com.greentown.aep.controller.DeviceResource.selectByProjectId(java.lang.Long)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/selectByDeviceId],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.device.DeviceInfoRO> com.greentown.aep.controller.DeviceResource.selectByDeviceId(java.lang.Long)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/openapi/getOne],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<com.greentown.aep.ro.device.OpenApiSecretRO> com.greentown.aep.controller.OpenApiSecretResource.getOne(java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/parkingTraffic/processing],methods=[POST]}" onto public com.greentown.aep.result.CallRemoteResult<java.lang.Boolean> com.greentown.aep.controller.ParkingTrafficResource.parkingDataProcessing(java.lang.String,java.lang.String,java.lang.String)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/test/subscribeNotify]}" onto public java.lang.String com.greentown.aep.controller.TestResource.subscribeNotify()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/switch/turnOn],methods=[POST]}" onto public void com.greentown.aep.controller.device.SwitchResource.turnOnLight() throws java.lang.Exception
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/device/switch/turnOff],methods=[POST]}" onto public void com.greentown.aep.controller.device.SwitchResource.turnOffLight() throws java.lang.Exception
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/rest/house/luminance/getLuminance],methods=[POST]}" onto public com.greentown.common.page.PageBean<com.greentown.aep.model.dto.DeviceInfoDO> com.greentown.aep.controller.house.LuminanceResource.getDeiceList(com.greentown.aep.ro.device.DeviceParamRO)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/favicon.ico],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.favicon()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/config.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<zipkin.autoconfigure.ui.ZipkinUiProperties> zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.serveUiConfig()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/index.html],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.Resource> zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.serveIndex()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/ || /zipkin/traces/{id} || /zipkin/dependency],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.forwardUiEndpoints()
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/zipkin/api/**],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.forwardApi(javax.servlet.http.HttpServletRequest)
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:543]-- Mapped "{[/],methods=[GET]}" onto public void zipkin.autoconfigure.ui.ZipkinUiAutoConfiguration.redirectRoot(javax.servlet.http.HttpServletResponse) throws java.io.IOException
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 12:59:53] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/zipkin/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 12:59:54] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:362]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
sc-aep : [2018-07-03 12:59:56] [INFO ]
				[org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration:173]-- 

Using default security password: f965ebc6-e401-4fb7-83b7-5550cde6bb81

sc-aep : [2018-07-03 12:59:56] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping:543]-- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@6c39ba30, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f2df380, org.springframework.security.web.context.SecurityContextPersistenceFilter@272d0dd3, org.springframework.security.web.header.HeaderWriterFilter@628fa8ea, org.springframework.web.filter.CorsFilter@2c3762c7, org.springframework.security.web.authentication.logout.LogoutFilter@2140582, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@36cbe0fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3110bb19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c752425, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cd0f9a4, org.springframework.security.web.session.SessionManagementFilter@796267e8, org.springframework.security.web.access.ExceptionTranslationFilter@1d5e0621, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c3c6564]
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59b5251d, org.springframework.security.web.context.SecurityContextPersistenceFilter@36f2bfe6, org.springframework.security.web.header.HeaderWriterFilter@56d9ef05, org.springframework.security.web.authentication.logout.LogoutFilter@3f7030b5, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@8cc5602, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f02ce3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d08fee2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1098c1b1, org.springframework.security.web.session.SessionManagementFilter@7475f071, org.springframework.security.web.access.ExceptionTranslationFilter@64c009b8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@751e7d99]
sc-aep : [2018-07-03 12:59:57] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6af447b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@53e780d7, org.springframework.security.web.header.HeaderWriterFilter@52caa9d8, org.springframework.security.web.authentication.logout.LogoutFilter@113ba21, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6e1d63ec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@181909f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f9af742, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47cce306, org.springframework.security.web.session.SessionManagementFilter@521981d9, org.springframework.security.web.access.ExceptionTranslationFilter@7dc6ce7d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37edb7fa]
sc-aep : [2018-07-03 12:59:58] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:165]-- Initializing ExecutorService 
sc-aep : [2018-07-03 12:59:59] [WARN ]
				[org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:19]-- spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:431]-- Registering beans for JMX exposure on startup
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'dataSource' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'statFilter' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:916]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3eabe84a,type=ConfigurationPropertiesRebinder]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:671]-- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:678]-- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:671]-- Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:431]-- Registering beans for JMX exposure on startup
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:343]-- Starting beans in phase 0
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
sc-aep : [2018-07-03 12:59:59] [INFO ]
				[com.netflix.discovery.DiscoveryClient:347]-- Initializing Eureka in region us-east-1
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:929]-- Disable delta property : false
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:930]-- Single vip registry refresh property : null
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:931]-- Force full registry fetch : false
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:932]-- Application is null : false
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:933]-- Registered Applications size is zero : true
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:935]-- Application version is -1: true
sc-aep : [2018-07-03 13:00:00] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1018]-- Getting all instance registry info from the eureka server
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1027]-- The response status is 200
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1253]-- Starting heartbeat executor: renew interval is: 30
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:59]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:434]-- Discovery Client initialized at timestamp 1530594001060 with initial instances count: 5
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40]-- Registering application sc-aep with eureka with status UP
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1288]-- Saw local status change event StatusChangeEvent [timestamp=1530594001096, current=UP, previous=STARTING]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:804]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416: registering service...
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.netflix.discovery.DiscoveryClient:813]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - registration status: 204
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:678]-- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:343]-- Starting beans in phase 2147483647
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor:268]-- No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer:160]-- Undertow started on port(s) 9416 (http)
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 9416
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[com.greentown.aep.AepApplication:57]-- Started AepApplication in 25.299 seconds (JVM running for 27.081)
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.amqp.rabbit.connection.CachingConnectionFactory:354]-- Attempting to connect to: [192.168.9.51:5672]
sc-aep : [2018-07-03 13:00:01] [INFO ]
				[org.springframework.amqp.rabbit.connection.CachingConnectionFactory:368]-- Created new connection: rabbitConnectionFactory#8247254:0/SimpleConnection@740d4854 [delegate=amqp://guest@192.168.9.51:5672/, localPort= 54136]
sc-aep : [2018-07-03 13:00:02] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:82]-- Fetching config from server at: http://localhost:8888
sc-aep : [2018-07-03 13:00:05] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:96]-- Located environment: name=sc-aep, profiles=[dev], label=null, version=46592a17a1d5098585127fe23cc2ef53c285305a, state=null
sc-aep : [2018-07-03 13:00:11] [INFO ]
				[io.undertow.servlet:360]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
sc-aep : [2018-07-03 13:00:11] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:489]-- FrameworkServlet 'dispatcherServlet': initialization started
sc-aep : [2018-07-03 13:00:11] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:508]-- FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
sc-aep : [2018-07-03 13:04:17] [WARN ]
				[org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoTokenServices:149]-- Could not fetch user details: class org.springframework.security.oauth2.client.resource.UserRedirectRequiredException, A redirect is required to get the users approval
sc-aep : [2018-07-03 13:05:00] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:10:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:15:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:20:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:25:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:30:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:35:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:40:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:45:01] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext:984]-- Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eabe84a: startup date [Tue Jul 03 12:59:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@70dd7e15
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:64]-- Unregistering application sc-aep with eureka with status DOWN
sc-aep : [2018-07-03 13:48:19] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1286]-- Saw local status change event StatusChangeEvent [timestamp=1530596899448, current=DOWN, previous=UP]
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:804]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416: registering service...
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:813]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - registration status: 204
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:358]-- Stopping beans in phase 2147483647
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:358]-- Stopping beans in phase 0
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:449]-- Unregistering JMX-exposed beans on shutdown
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter:241]-- Unregistering JMX-exposed beans
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:449]-- Unregistering JMX-exposed beans on shutdown
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:241]-- Unregistering JMX-exposed beans
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:861]-- Shutting down DiscoveryClient ...
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[com.netflix.discovery.DiscoveryClient:893]-- Unregistering ...
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.apache.http.impl.client.DefaultHttpClient:695]-- I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:8761: Connection reset
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.apache.http.impl.client.DefaultHttpClient:705]-- Retrying request to {}->http://localhost:8761
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.apache.http.impl.client.DefaultHttpClient:695]-- I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:8761: Connection reset
sc-aep : [2018-07-03 13:48:19] [INFO ]
				[org.apache.http.impl.client.DefaultHttpClient:705]-- Retrying request to {}->http://localhost:8761
sc-aep : [2018-07-03 13:48:19] [ERROR]
				[com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:91]-- Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:894)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:872)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:216)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:472)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy133.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1032)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1008)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
sc-aep : [2018-07-03 13:48:19] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:129]-- Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
sc-aep : [2018-07-03 13:48:19] [ERROR]
				[com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:83]-- Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:894)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:872)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:216)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:472)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy133.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1032)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1008)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 common frames omitted
sc-aep : [2018-07-03 13:48:19] [WARN ]
				[com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:129]-- Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
sc-aep : [2018-07-03 13:48:19] [ERROR]
				[com.netflix.discovery.DiscoveryClient:897]-- DiscoveryClient_SC-AEP/10.100.21.60:sc-aep:9416 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:894)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:872)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:216)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:472)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy133.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1032)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1008)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
sc-aep : [2018-07-03 13:48:20] [INFO ]
				[com.netflix.discovery.DiscoveryClient:882]-- Completed shut down of DiscoveryClient
sc-aep : [2018-07-03 13:48:20] [INFO ]
				[com.alibaba.druid.pool.DruidDataSource:1712]-- {dataSource-1} closed
sc-aep : [2018-07-03 13:48:20] [INFO ]
				[io.undertow.servlet:360]-- Destroying Spring FrameworkServlet 'dispatcherServlet'
